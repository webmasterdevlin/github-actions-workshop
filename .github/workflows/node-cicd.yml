name: Node.js CI/CD Workflow

on:
  push:
    branches: [ master ]
    paths:
      - "apis/userprofile/**"
      - ".github/workflows/node-cicd.yml"
      
  pull_request:
    paths:
      - "apis/userprofile/**"
      - ".github/workflows/node-cicd.yml"


jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./apis/userprofile

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: '8'
        cache: 'npm'
        cache-dependency-path: ./apis/userprofile/package-lock.json
    - run: npm ci
    - run: npm test
    - name: Open Issue
      if: ${{ failure() }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      uses: JasonEtco/create-an-issue@v2

  deploy:
    name: Deploy

    if: ${{ github.ref == 'refs/heads/master' }}
    needs: [test]

    runs-on: ubuntu-latest
    env:
      APP_NAME: "openhackjlq85zk4userprofile"
      CONTAINER_NAME: "devopsoh/api-userprofile"

    defaults:
      run:
        working-directory: ./apis/userprofile

    steps:
      # checkout the repo
      - name: "Checkout GitHub Action"
        uses: actions/checkout@main

      - name: "Build and push image"
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - run: |
          docker build . -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{ env.CONTAINER_NAME }}:${{ github.run_number }}
          docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{ env.CONTAINER_NAME }}:${{ github.run_number }}

      - uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.APP_NAME }}
          slot-name: staging
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE_USERPROFILE }}
          images: "${{ secrets.REGISTRY_LOGIN_SERVER }}/${{ env.CONTAINER_NAME }}:${{ github.run_number }}"